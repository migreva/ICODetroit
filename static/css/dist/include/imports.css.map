{"version":3,"names":[],"mappings":"","sources":["include/imports.css"],"sourcesContent":["/*  Syntax Quick Reference\n  --------------------------\n  column($ratios: 1, $offset: 0, $cycle: 0, $uncycle: 0, $gutter: $jeet-gutter)\n  span($ratio: 1, $offset: 0)\n  shift($ratios: 0, $col_or_span: column, $gutter: $jeet-gutter)\n  unshift()\n  edit()\n  center($max_width: 1410px, $pad: 0)\n  stack($pad: 0, $align: false)\n  unstack()\n  align($direction: both)\n  cf()\n*/\n/**\n * Grid settings.\n * All values are defaults and can therefore be easily overidden.\n */\n/**\n * List functions courtesy of the wonderful folks at Team Sass.\n * Check out their awesome grid: Singularity.\n */\n/**\n * Get  percentage from a given ratio.\n * @param {number} [$ratio=1] - The column ratio of the element.\n * @returns {number} - The percentage value.\n */\n/**\n * Work out the column widths based on the ratio and gutter sizes.\n * @param {number} [$ratios=1] - The column ratio of the element.\n * @param {number} [$gutter=$jeet-gutter] - The gutter for the column.\n * @returns {list} $width $gutter - A list containing the with and gutter for the element.\n */\n/**\n * Get the set layout direction for the project.\n * @returns {string} $direction - The layout direction.\n */\n/**\n * Replace a specified list value with a new value (uses built in set-nth() if available)\n * @param {list} $list - The list of values you want to alter.\n * @param {number} $index - The index of the list item you want to replace.\n * @param {*} $value - The value you want to replace $index with.\n * @returns {list} $list - The list with the value replaced or removed.\n * @warn if an invalid index is supplied.\n */\n/**\n * Reverse a list (progressively enhanced for Sass 3.3)\n * @param {list} $list - The list of values you want to reverse.\n * @returns {list} $result - The reversed list.\n */\n/**\n * Get the opposite direction to a given value.\n * @param {string} $dir - The direction you want the opposite of.\n * @returns {string} - The opposite direction to $dir.\n * @warn if an incorrect string is provided.\n */\n/**\n * Style an element as a column with a gutter.\n * @param {number} [$ratios=1] - A width relative to its container as a fraction.\n * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).\n * @param {number} [$cycle=0] - Easily create an nth column grid where $cycle equals the number of columns.\n * @param {number} [$uncycle=0] - Undo a previous cycle value to allow for a new one.\n * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.\n */\n/**\n * An alias for the column mixin.\n * @param [$args...] - All arguments get passed through to column().\n */\n/**\n * Get the width of a column and nothing else.\n * @param {number} [$ratios=1] - A width relative to its container as a fraction.\n * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.\n */\n/**\n * Get the gutter size of a column and nothing else.\n * @param {number} [ratios=1] - A width relative to its container as a fraction.\n * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.\n */\n/**\n * An alias for the column-width function.\n * @param [$args...] - All arguments get passed through to column().\n */\n/**\n * An alias for the column-gutter function.\n * @param [$args...] - All arguments get passed through to column().\n */\n/**\n * Style an element as a column without any gutters for a seamless row.\n * @param {number} [$ratios=1] - A width relative to its container as a fraction.\n * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).\n * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.\n * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.\n */\n/**\n * Reorder columns without altering the HTML.\n * @param {number} [$ratios=0] - Specify how far along you want the element to move.\n * @param {string} [$col-or-span=column] - Specify whether the element has a gutter or not.\n * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.\n */\n/**\n * Reset an element that has had shift() applied to it.\n */\n/**\n * View the grid and its layers for easy debugging.\n * @param {string} [$color=black] - The background tint applied.\n * @param {boolean} [$important=false] - Whether to apply the style as !important.\n */\n/**\n *  Alias for edit().\n */\n/**\n * Horizontally center an element.\n * @param {number} [$max-width=1410px] - The max width the element can be.\n * @param {number} [$pad=0] - Specify the element's left and right padding.\n */\n/**\n * Uncenter an element.\n */\n/**\n * Stack an element so that nothing is either side of it.\n * @param {number} [$pad=0] - Specify the element's left and right padding.\n * @param {boolean/string} [$align=false] - Specify the text align for the element.\n */\n/**\n * Unstack an element.\n */\n/**\n * Center an element on either or both axes.\n * @requires A parent container with relative positioning.\n * @param {string} [$direction=both] - Specify which axes to center the element on.\n */\n/**\n * Apply a clearfix to an element.\n */\n@font-face {\n  font-family: \"chalkboard\";\n  src: url(\"../fonts/chalkboard/chalkboard.otf\") format(\"opentype\"); }\n\n/* Colors */\n/* Framework constants */\n/* End Framework constants */\n/* Navbar stuff */\n/*  Syntax Quick Reference\n  --------------------------\n  column($ratios: 1, $offset: 0, $cycle: 0, $uncycle: 0, $gutter: $jeet-gutter)\n  span($ratio: 1, $offset: 0)\n  shift($ratios: 0, $col_or_span: column, $gutter: $jeet-gutter)\n  unshift()\n  edit()\n  center($max_width: 1410px, $pad: 0)\n  stack($pad: 0, $align: false)\n  unstack()\n  align($direction: both)\n  cf()\n*/\n/**\n * Grid settings.\n * All values are defaults and can therefore be easily overidden.\n */\n/**\n * List functions courtesy of the wonderful folks at Team Sass.\n * Check out their awesome grid: Singularity.\n */\n/**\n * Get  percentage from a given ratio.\n * @param {number} [$ratio=1] - The column ratio of the element.\n * @returns {number} - The percentage value.\n */\n/**\n * Work out the column widths based on the ratio and gutter sizes.\n * @param {number} [$ratios=1] - The column ratio of the element.\n * @param {number} [$gutter=$jeet-gutter] - The gutter for the column.\n * @returns {list} $width $gutter - A list containing the with and gutter for the element.\n */\n/**\n * Get the set layout direction for the project.\n * @returns {string} $direction - The layout direction.\n */\n/**\n * Replace a specified list value with a new value (uses built in set-nth() if available)\n * @param {list} $list - The list of values you want to alter.\n * @param {number} $index - The index of the list item you want to replace.\n * @param {*} $value - The value you want to replace $index with.\n * @returns {list} $list - The list with the value replaced or removed.\n * @warn if an invalid index is supplied.\n */\n/**\n * Reverse a list (progressively enhanced for Sass 3.3)\n * @param {list} $list - The list of values you want to reverse.\n * @returns {list} $result - The reversed list.\n */\n/**\n * Get the opposite direction to a given value.\n * @param {string} $dir - The direction you want the opposite of.\n * @returns {string} - The opposite direction to $dir.\n * @warn if an incorrect string is provided.\n */\n/**\n * Style an element as a column with a gutter.\n * @param {number} [$ratios=1] - A width relative to its container as a fraction.\n * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).\n * @param {number} [$cycle=0] - Easily create an nth column grid where $cycle equals the number of columns.\n * @param {number} [$uncycle=0] - Undo a previous cycle value to allow for a new one.\n * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.\n */\n/**\n * An alias for the column mixin.\n * @param [$args...] - All arguments get passed through to column().\n */\n/**\n * Get the width of a column and nothing else.\n * @param {number} [$ratios=1] - A width relative to its container as a fraction.\n * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.\n */\n/**\n * Get the gutter size of a column and nothing else.\n * @param {number} [ratios=1] - A width relative to its container as a fraction.\n * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.\n */\n/**\n * An alias for the column-width function.\n * @param [$args...] - All arguments get passed through to column().\n */\n/**\n * An alias for the column-gutter function.\n * @param [$args...] - All arguments get passed through to column().\n */\n/**\n * Style an element as a column without any gutters for a seamless row.\n * @param {number} [$ratios=1] - A width relative to its container as a fraction.\n * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).\n * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.\n * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.\n */\n/**\n * Reorder columns without altering the HTML.\n * @param {number} [$ratios=0] - Specify how far along you want the element to move.\n * @param {string} [$col-or-span=column] - Specify whether the element has a gutter or not.\n * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.\n */\n/**\n * Reset an element that has had shift() applied to it.\n */\n/**\n * View the grid and its layers for easy debugging.\n * @param {string} [$color=black] - The background tint applied.\n * @param {boolean} [$important=false] - Whether to apply the style as !important.\n */\n/**\n *  Alias for edit().\n */\n/**\n * Horizontally center an element.\n * @param {number} [$max-width=1410px] - The max width the element can be.\n * @param {number} [$pad=0] - Specify the element's left and right padding.\n */\n/**\n * Uncenter an element.\n */\n/**\n * Stack an element so that nothing is either side of it.\n * @param {number} [$pad=0] - Specify the element's left and right padding.\n * @param {boolean/string} [$align=false] - Specify the text align for the element.\n */\n/**\n * Unstack an element.\n */\n/**\n * Center an element on either or both axes.\n * @requires A parent container with relative positioning.\n * @param {string} [$direction=both] - Specify which axes to center the element on.\n */\n/**\n * Apply a clearfix to an element.\n */\n/* Colors */\n/* Framework constants */\n/* End Framework constants */\n/* Navbar stuff */\n.jelly-animation {\n  -webkit-animation: jelly 1000ms linear both;\n  animation: jelly 1000ms linear both; }\n\n.jelly-animation-out {\n  -webkit-animation: jelly-out 1000ms linear both;\n  animatino: jelly-out 1000ms linear both; }\n\n/* Generated with Bounce.js. Edit at http://goo.gl/y3FSYm */\n@-webkit-keyframes jelly {\n  0% {\n    -webkit-transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  4.7% {\n    -webkit-transform: matrix3d(1.225, 0, 0, 0, 0, 1.225, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.225, 0, 0, 0, 0, 1.225, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  9.41% {\n    -webkit-transform: matrix3d(1.442, 0, 0, 0, 0, 1.442, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.442, 0, 0, 0, 0, 1.442, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  14.11% {\n    -webkit-transform: matrix3d(1.57, 0, 0, 0, 0, 1.57, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.57, 0, 0, 0, 0, 1.57, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  18.72% {\n    -webkit-transform: matrix3d(1.606, 0, 0, 0, 0, 1.606, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.606, 0, 0, 0, 0, 1.606, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  24.32% {\n    -webkit-transform: matrix3d(1.575, 0, 0, 0, 0, 1.575, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.575, 0, 0, 0, 0, 1.575, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  29.93% {\n    -webkit-transform: matrix3d(1.524, 0, 0, 0, 0, 1.524, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.524, 0, 0, 0, 0, 1.524, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  35.54% {\n    -webkit-transform: matrix3d(1.49, 0, 0, 0, 0, 1.49, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.49, 0, 0, 0, 0, 1.49, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  41.04% {\n    -webkit-transform: matrix3d(1.48, 0, 0, 0, 0, 1.48, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.48, 0, 0, 0, 0, 1.48, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  52.15% {\n    -webkit-transform: matrix3d(1.496, 0, 0, 0, 0, 1.496, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.496, 0, 0, 0, 0, 1.496, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  63.26% {\n    -webkit-transform: matrix3d(1.504, 0, 0, 0, 0, 1.504, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.504, 0, 0, 0, 0, 1.504, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  85.49% {\n    -webkit-transform: matrix3d(1.499, 0, 0, 0, 0, 1.499, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.499, 0, 0, 0, 0, 1.499, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  100% {\n    -webkit-transform: matrix3d(1.5, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.5, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); } }\n\n@keyframes jelly {\n  0% {\n    -webkit-transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  4.7% {\n    -webkit-transform: matrix3d(1.225, 0, 0, 0, 0, 1.225, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.225, 0, 0, 0, 0, 1.225, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  9.41% {\n    -webkit-transform: matrix3d(1.442, 0, 0, 0, 0, 1.442, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.442, 0, 0, 0, 0, 1.442, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  14.11% {\n    -webkit-transform: matrix3d(1.57, 0, 0, 0, 0, 1.57, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.57, 0, 0, 0, 0, 1.57, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  18.72% {\n    -webkit-transform: matrix3d(1.606, 0, 0, 0, 0, 1.606, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.606, 0, 0, 0, 0, 1.606, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  24.32% {\n    -webkit-transform: matrix3d(1.575, 0, 0, 0, 0, 1.575, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.575, 0, 0, 0, 0, 1.575, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  29.93% {\n    -webkit-transform: matrix3d(1.524, 0, 0, 0, 0, 1.524, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.524, 0, 0, 0, 0, 1.524, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  35.54% {\n    -webkit-transform: matrix3d(1.49, 0, 0, 0, 0, 1.49, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.49, 0, 0, 0, 0, 1.49, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  41.04% {\n    -webkit-transform: matrix3d(1.48, 0, 0, 0, 0, 1.48, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.48, 0, 0, 0, 0, 1.48, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  52.15% {\n    -webkit-transform: matrix3d(1.496, 0, 0, 0, 0, 1.496, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.496, 0, 0, 0, 0, 1.496, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  63.26% {\n    -webkit-transform: matrix3d(1.504, 0, 0, 0, 0, 1.504, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.504, 0, 0, 0, 0, 1.504, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  85.49% {\n    -webkit-transform: matrix3d(1.499, 0, 0, 0, 0, 1.499, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.499, 0, 0, 0, 0, 1.499, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  100% {\n    -webkit-transform: matrix3d(1.5, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.5, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); } }\n\n/* Generated with Bounce.js. Edit at http://goo.gl/TFx1Sj */\n@-webkit-keyframes jelly-out {\n  0% {\n    -webkit-transform: matrix3d(1.5, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.5, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  4.7% {\n    -webkit-transform: matrix3d(1.275, 0, 0, 0, 0, 1.275, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.275, 0, 0, 0, 0, 1.275, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  9.41% {\n    -webkit-transform: matrix3d(1.058, 0, 0, 0, 0, 1.058, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.058, 0, 0, 0, 0, 1.058, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  14.11% {\n    -webkit-transform: matrix3d(0.93, 0, 0, 0, 0, 0.93, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.93, 0, 0, 0, 0, 0.93, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  18.72% {\n    -webkit-transform: matrix3d(0.894, 0, 0, 0, 0, 0.894, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.894, 0, 0, 0, 0, 0.894, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  24.32% {\n    -webkit-transform: matrix3d(0.925, 0, 0, 0, 0, 0.925, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.925, 0, 0, 0, 0, 0.925, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  29.93% {\n    -webkit-transform: matrix3d(0.976, 0, 0, 0, 0, 0.976, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.976, 0, 0, 0, 0, 0.976, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  35.54% {\n    -webkit-transform: matrix3d(1.01, 0, 0, 0, 0, 1.01, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.01, 0, 0, 0, 0, 1.01, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  41.04% {\n    -webkit-transform: matrix3d(1.02, 0, 0, 0, 0, 1.02, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.02, 0, 0, 0, 0, 1.02, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  52.15% {\n    -webkit-transform: matrix3d(1.004, 0, 0, 0, 0, 1.004, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.004, 0, 0, 0, 0, 1.004, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  63.26% {\n    -webkit-transform: matrix3d(0.996, 0, 0, 0, 0, 0.996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.996, 0, 0, 0, 0, 0.996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  85.49% {\n    -webkit-transform: matrix3d(1.001, 0, 0, 0, 0, 1.001, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.001, 0, 0, 0, 0, 1.001, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  100% {\n    -webkit-transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); } }\n\n@keyframes jelly-out {\n  0% {\n    -webkit-transform: matrix3d(1.5, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.5, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  4.7% {\n    -webkit-transform: matrix3d(1.275, 0, 0, 0, 0, 1.275, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.275, 0, 0, 0, 0, 1.275, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  9.41% {\n    -webkit-transform: matrix3d(1.058, 0, 0, 0, 0, 1.058, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.058, 0, 0, 0, 0, 1.058, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  14.11% {\n    -webkit-transform: matrix3d(0.93, 0, 0, 0, 0, 0.93, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.93, 0, 0, 0, 0, 0.93, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  18.72% {\n    -webkit-transform: matrix3d(0.894, 0, 0, 0, 0, 0.894, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.894, 0, 0, 0, 0, 0.894, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  24.32% {\n    -webkit-transform: matrix3d(0.925, 0, 0, 0, 0, 0.925, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.925, 0, 0, 0, 0, 0.925, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  29.93% {\n    -webkit-transform: matrix3d(0.976, 0, 0, 0, 0, 0.976, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.976, 0, 0, 0, 0, 0.976, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  35.54% {\n    -webkit-transform: matrix3d(1.01, 0, 0, 0, 0, 1.01, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.01, 0, 0, 0, 0, 1.01, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  41.04% {\n    -webkit-transform: matrix3d(1.02, 0, 0, 0, 0, 1.02, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.02, 0, 0, 0, 0, 1.02, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  52.15% {\n    -webkit-transform: matrix3d(1.004, 0, 0, 0, 0, 1.004, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.004, 0, 0, 0, 0, 1.004, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  63.26% {\n    -webkit-transform: matrix3d(0.996, 0, 0, 0, 0, 0.996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.996, 0, 0, 0, 0, 0.996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  85.49% {\n    -webkit-transform: matrix3d(1.001, 0, 0, 0, 0, 1.001, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.001, 0, 0, 0, 0, 1.001, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  100% {\n    -webkit-transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); } }\n\n.ico-btn {\n  background-color: #ed7307;\n  color: white;\n  border-radius: 5px;\n  display: block;\n  text-align: center;\n  cursor: pointer;\n  text-decoration: none; }\n  .ico-btn a.ico-btn, .ico-btn a.ico-btn:hover, .ico-btn a.ico-btn:focus {\n    text-decoration: none !important;\n    color: white; }\n  .ico-btn:active, .ico-btn:hover {\n    background-color: #bb5b06; }\n\n.ico-btn-lg {\n  font-size: 20px;\n  padding: 5px; }\n\n.jelly-animation {\n  -webkit-animation: jelly 1000ms linear both;\n  animation: jelly 1000ms linear both; }\n\n.jelly-animation-out {\n  -webkit-animation: jelly-out 1000ms linear both;\n  animatino: jelly-out 1000ms linear both; }\n\n/* Generated with Bounce.js. Edit at http://goo.gl/y3FSYm */\n@-webkit-keyframes jelly {\n  0% {\n    -webkit-transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  4.7% {\n    -webkit-transform: matrix3d(1.225, 0, 0, 0, 0, 1.225, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.225, 0, 0, 0, 0, 1.225, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  9.41% {\n    -webkit-transform: matrix3d(1.442, 0, 0, 0, 0, 1.442, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.442, 0, 0, 0, 0, 1.442, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  14.11% {\n    -webkit-transform: matrix3d(1.57, 0, 0, 0, 0, 1.57, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.57, 0, 0, 0, 0, 1.57, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  18.72% {\n    -webkit-transform: matrix3d(1.606, 0, 0, 0, 0, 1.606, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.606, 0, 0, 0, 0, 1.606, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  24.32% {\n    -webkit-transform: matrix3d(1.575, 0, 0, 0, 0, 1.575, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.575, 0, 0, 0, 0, 1.575, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  29.93% {\n    -webkit-transform: matrix3d(1.524, 0, 0, 0, 0, 1.524, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.524, 0, 0, 0, 0, 1.524, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  35.54% {\n    -webkit-transform: matrix3d(1.49, 0, 0, 0, 0, 1.49, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.49, 0, 0, 0, 0, 1.49, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  41.04% {\n    -webkit-transform: matrix3d(1.48, 0, 0, 0, 0, 1.48, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.48, 0, 0, 0, 0, 1.48, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  52.15% {\n    -webkit-transform: matrix3d(1.496, 0, 0, 0, 0, 1.496, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.496, 0, 0, 0, 0, 1.496, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  63.26% {\n    -webkit-transform: matrix3d(1.504, 0, 0, 0, 0, 1.504, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.504, 0, 0, 0, 0, 1.504, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  85.49% {\n    -webkit-transform: matrix3d(1.499, 0, 0, 0, 0, 1.499, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.499, 0, 0, 0, 0, 1.499, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  100% {\n    -webkit-transform: matrix3d(1.5, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.5, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); } }\n\n@keyframes jelly {\n  0% {\n    -webkit-transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  4.7% {\n    -webkit-transform: matrix3d(1.225, 0, 0, 0, 0, 1.225, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.225, 0, 0, 0, 0, 1.225, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  9.41% {\n    -webkit-transform: matrix3d(1.442, 0, 0, 0, 0, 1.442, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.442, 0, 0, 0, 0, 1.442, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  14.11% {\n    -webkit-transform: matrix3d(1.57, 0, 0, 0, 0, 1.57, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.57, 0, 0, 0, 0, 1.57, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  18.72% {\n    -webkit-transform: matrix3d(1.606, 0, 0, 0, 0, 1.606, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.606, 0, 0, 0, 0, 1.606, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  24.32% {\n    -webkit-transform: matrix3d(1.575, 0, 0, 0, 0, 1.575, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.575, 0, 0, 0, 0, 1.575, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  29.93% {\n    -webkit-transform: matrix3d(1.524, 0, 0, 0, 0, 1.524, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.524, 0, 0, 0, 0, 1.524, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  35.54% {\n    -webkit-transform: matrix3d(1.49, 0, 0, 0, 0, 1.49, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.49, 0, 0, 0, 0, 1.49, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  41.04% {\n    -webkit-transform: matrix3d(1.48, 0, 0, 0, 0, 1.48, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.48, 0, 0, 0, 0, 1.48, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  52.15% {\n    -webkit-transform: matrix3d(1.496, 0, 0, 0, 0, 1.496, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.496, 0, 0, 0, 0, 1.496, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  63.26% {\n    -webkit-transform: matrix3d(1.504, 0, 0, 0, 0, 1.504, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.504, 0, 0, 0, 0, 1.504, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  85.49% {\n    -webkit-transform: matrix3d(1.499, 0, 0, 0, 0, 1.499, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.499, 0, 0, 0, 0, 1.499, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  100% {\n    -webkit-transform: matrix3d(1.5, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.5, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); } }\n\n/* Generated with Bounce.js. Edit at http://goo.gl/TFx1Sj */\n@-webkit-keyframes jelly-out {\n  0% {\n    -webkit-transform: matrix3d(1.5, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.5, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  4.7% {\n    -webkit-transform: matrix3d(1.275, 0, 0, 0, 0, 1.275, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.275, 0, 0, 0, 0, 1.275, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  9.41% {\n    -webkit-transform: matrix3d(1.058, 0, 0, 0, 0, 1.058, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.058, 0, 0, 0, 0, 1.058, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  14.11% {\n    -webkit-transform: matrix3d(0.93, 0, 0, 0, 0, 0.93, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.93, 0, 0, 0, 0, 0.93, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  18.72% {\n    -webkit-transform: matrix3d(0.894, 0, 0, 0, 0, 0.894, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.894, 0, 0, 0, 0, 0.894, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  24.32% {\n    -webkit-transform: matrix3d(0.925, 0, 0, 0, 0, 0.925, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.925, 0, 0, 0, 0, 0.925, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  29.93% {\n    -webkit-transform: matrix3d(0.976, 0, 0, 0, 0, 0.976, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.976, 0, 0, 0, 0, 0.976, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  35.54% {\n    -webkit-transform: matrix3d(1.01, 0, 0, 0, 0, 1.01, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.01, 0, 0, 0, 0, 1.01, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  41.04% {\n    -webkit-transform: matrix3d(1.02, 0, 0, 0, 0, 1.02, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.02, 0, 0, 0, 0, 1.02, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  52.15% {\n    -webkit-transform: matrix3d(1.004, 0, 0, 0, 0, 1.004, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.004, 0, 0, 0, 0, 1.004, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  63.26% {\n    -webkit-transform: matrix3d(0.996, 0, 0, 0, 0, 0.996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.996, 0, 0, 0, 0, 0.996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  85.49% {\n    -webkit-transform: matrix3d(1.001, 0, 0, 0, 0, 1.001, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.001, 0, 0, 0, 0, 1.001, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  100% {\n    -webkit-transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); } }\n\n@keyframes jelly-out {\n  0% {\n    -webkit-transform: matrix3d(1.5, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.5, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  4.7% {\n    -webkit-transform: matrix3d(1.275, 0, 0, 0, 0, 1.275, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.275, 0, 0, 0, 0, 1.275, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  9.41% {\n    -webkit-transform: matrix3d(1.058, 0, 0, 0, 0, 1.058, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.058, 0, 0, 0, 0, 1.058, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  14.11% {\n    -webkit-transform: matrix3d(0.93, 0, 0, 0, 0, 0.93, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.93, 0, 0, 0, 0, 0.93, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  18.72% {\n    -webkit-transform: matrix3d(0.894, 0, 0, 0, 0, 0.894, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.894, 0, 0, 0, 0, 0.894, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  24.32% {\n    -webkit-transform: matrix3d(0.925, 0, 0, 0, 0, 0.925, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.925, 0, 0, 0, 0, 0.925, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  29.93% {\n    -webkit-transform: matrix3d(0.976, 0, 0, 0, 0, 0.976, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.976, 0, 0, 0, 0, 0.976, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  35.54% {\n    -webkit-transform: matrix3d(1.01, 0, 0, 0, 0, 1.01, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.01, 0, 0, 0, 0, 1.01, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  41.04% {\n    -webkit-transform: matrix3d(1.02, 0, 0, 0, 0, 1.02, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.02, 0, 0, 0, 0, 1.02, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  52.15% {\n    -webkit-transform: matrix3d(1.004, 0, 0, 0, 0, 1.004, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.004, 0, 0, 0, 0, 1.004, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  63.26% {\n    -webkit-transform: matrix3d(0.996, 0, 0, 0, 0, 0.996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(0.996, 0, 0, 0, 0, 0.996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  85.49% {\n    -webkit-transform: matrix3d(1.001, 0, 0, 0, 0, 1.001, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1.001, 0, 0, 0, 0, 1.001, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  100% {\n    -webkit-transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); } }\n"],"file":"include/imports.css","sourceRoot":"/src"}